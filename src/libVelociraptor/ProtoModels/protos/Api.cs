// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from protos/api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBwcm90b3MvYXBpLnByb3RvEgVwcm90bxobZ29vZ2xlL3Byb3RvYnVmL2Vt",
            "cHR5LnByb3RvIicKClZRTFJlcXVlc3QSDAoETmFtZRgCIAEoCRILCgNWUUwY",
            "ASABKAkiJAoGVlFMRW52EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCSKL",
            "AQoQVlFMQ29sbGVjdG9yQXJncxIaCgNlbnYYAyADKAsyDS5wcm90by5WUUxF",
            "bnYSIAoFUXVlcnkYAiADKAsyES5wcm90by5WUUxSZXF1ZXN0Eg8KB21heF9y",
            "b3cYBCABKAQSEAoIbWF4X3dhaXQYBiABKAQSFgoOb3BzX3Blcl9zZWNvbmQY",
            "GCABKAIiKgoKVlFMVHlwZU1hcBIOCgZjb2x1bW4YASABKAkSDAoEdHlwZRgC",
            "IAEoCSLIAQoLVlFMUmVzcG9uc2USEAoIUmVzcG9uc2UYASABKAkSDwoHQ29s",
            "dW1ucxgCIAMoCRIgCgV0eXBlcxgIIAMoCzIRLnByb3RvLlZRTFR5cGVNYXAS",
            "EAoIcXVlcnlfaWQYBSABKAQSDAoEcGFydBgGIAEoBBIgCgVRdWVyeRgDIAEo",
            "CzIRLnByb3RvLlZRTFJlcXVlc3QSEQoJdGltZXN0YW1wGAQgASgEEhIKCnRv",
            "dGFsX3Jvd3MYByABKAQSCwoDbG9nGAkgASgJImIKDVZGU0ZpbGVCdWZmZXIS",
            "EQoJY2xpZW50X2lkGAEgASgJEhAKCHZmc19wYXRoGAIgASgJEg4KBm9mZnNl",
            "dBgDIAEoBBIOCgZsZW5ndGgYBCABKA0SDAoEZGF0YRgFIAEoDDK5AQoDQVBJ",
            "EjgKBVF1ZXJ5EhcucHJvdG8uVlFMQ29sbGVjdG9yQXJncxoSLnByb3RvLlZR",
            "TFJlc3BvbnNlIgAwARI8CgxWRlNHZXRCdWZmZXISFC5wcm90by5WRlNGaWxl",
            "QnVmZmVyGhQucHJvdG8uVkZTRmlsZUJ1ZmZlciIAEjoKCldyaXRlRXZlbnQS",
            "Ei5wcm90by5WUUxSZXNwb25zZRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIA",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VQLRequest), global::Proto.VQLRequest.Parser, new[]{ "Name", "VQL" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VQLEnv), global::Proto.VQLEnv.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VQLCollectorArgs), global::Proto.VQLCollectorArgs.Parser, new[]{ "Env", "Query", "MaxRow", "MaxWait", "OpsPerSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VQLTypeMap), global::Proto.VQLTypeMap.Parser, new[]{ "Column", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VQLResponse), global::Proto.VQLResponse.Parser, new[]{ "Response", "Columns", "Types_", "QueryId", "Part", "Query", "Timestamp", "TotalRows", "Log" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.VFSFileBuffer), global::Proto.VFSFileBuffer.Parser, new[]{ "ClientId", "VfsPath", "Offset", "Length", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class VQLRequest : pb::IMessage<VQLRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VQLRequest> _parser = new pb::MessageParser<VQLRequest>(() => new VQLRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VQLRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLRequest(VQLRequest other) : this() {
      name_ = other.name_;
      vQL_ = other.vQL_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLRequest Clone() {
      return new VQLRequest(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VQL" field.</summary>
    public const int VQLFieldNumber = 1;
    private string vQL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VQL {
      get { return vQL_; }
      set {
        vQL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VQLRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VQLRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (VQL != other.VQL) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (VQL.Length != 0) hash ^= VQL.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VQL.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VQL);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VQL.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VQL);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (VQL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VQL);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VQLRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.VQL.Length != 0) {
        VQL = other.VQL;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VQL = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VQL = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VQLEnv : pb::IMessage<VQLEnv>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VQLEnv> _parser = new pb::MessageParser<VQLEnv>(() => new VQLEnv());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VQLEnv> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLEnv() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLEnv(VQLEnv other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLEnv Clone() {
      return new VQLEnv(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VQLEnv);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VQLEnv other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VQLEnv other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VQLCollectorArgs : pb::IMessage<VQLCollectorArgs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VQLCollectorArgs> _parser = new pb::MessageParser<VQLCollectorArgs>(() => new VQLCollectorArgs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VQLCollectorArgs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLCollectorArgs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLCollectorArgs(VQLCollectorArgs other) : this() {
      env_ = other.env_.Clone();
      query_ = other.query_.Clone();
      maxRow_ = other.maxRow_;
      maxWait_ = other.maxWait_;
      opsPerSecond_ = other.opsPerSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLCollectorArgs Clone() {
      return new VQLCollectorArgs(this);
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto.VQLEnv> _repeated_env_codec
        = pb::FieldCodec.ForMessage(26, global::Proto.VQLEnv.Parser);
    private readonly pbc::RepeatedField<global::Proto.VQLEnv> env_ = new pbc::RepeatedField<global::Proto.VQLEnv>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.VQLEnv> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "Query" field.</summary>
    public const int QueryFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Proto.VQLRequest> _repeated_query_codec
        = pb::FieldCodec.ForMessage(18, global::Proto.VQLRequest.Parser);
    private readonly pbc::RepeatedField<global::Proto.VQLRequest> query_ = new pbc::RepeatedField<global::Proto.VQLRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.VQLRequest> Query {
      get { return query_; }
    }

    /// <summary>Field number for the "max_row" field.</summary>
    public const int MaxRowFieldNumber = 4;
    private ulong maxRow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxRow {
      get { return maxRow_; }
      set {
        maxRow_ = value;
      }
    }

    /// <summary>Field number for the "max_wait" field.</summary>
    public const int MaxWaitFieldNumber = 6;
    private ulong maxWait_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxWait {
      get { return maxWait_; }
      set {
        maxWait_ = value;
      }
    }

    /// <summary>Field number for the "ops_per_second" field.</summary>
    public const int OpsPerSecondFieldNumber = 24;
    private float opsPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float OpsPerSecond {
      get { return opsPerSecond_; }
      set {
        opsPerSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VQLCollectorArgs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VQLCollectorArgs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!env_.Equals(other.env_)) return false;
      if(!query_.Equals(other.query_)) return false;
      if (MaxRow != other.MaxRow) return false;
      if (MaxWait != other.MaxWait) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OpsPerSecond, other.OpsPerSecond)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= env_.GetHashCode();
      hash ^= query_.GetHashCode();
      if (MaxRow != 0UL) hash ^= MaxRow.GetHashCode();
      if (MaxWait != 0UL) hash ^= MaxWait.GetHashCode();
      if (OpsPerSecond != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OpsPerSecond);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      query_.WriteTo(output, _repeated_query_codec);
      env_.WriteTo(output, _repeated_env_codec);
      if (MaxRow != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(MaxRow);
      }
      if (MaxWait != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(MaxWait);
      }
      if (OpsPerSecond != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(OpsPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      query_.WriteTo(ref output, _repeated_query_codec);
      env_.WriteTo(ref output, _repeated_env_codec);
      if (MaxRow != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(MaxRow);
      }
      if (MaxWait != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(MaxWait);
      }
      if (OpsPerSecond != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(OpsPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += env_.CalculateSize(_repeated_env_codec);
      size += query_.CalculateSize(_repeated_query_codec);
      if (MaxRow != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxRow);
      }
      if (MaxWait != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxWait);
      }
      if (OpsPerSecond != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VQLCollectorArgs other) {
      if (other == null) {
        return;
      }
      env_.Add(other.env_);
      query_.Add(other.query_);
      if (other.MaxRow != 0UL) {
        MaxRow = other.MaxRow;
      }
      if (other.MaxWait != 0UL) {
        MaxWait = other.MaxWait;
      }
      if (other.OpsPerSecond != 0F) {
        OpsPerSecond = other.OpsPerSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            query_.AddEntriesFrom(input, _repeated_query_codec);
            break;
          }
          case 26: {
            env_.AddEntriesFrom(input, _repeated_env_codec);
            break;
          }
          case 32: {
            MaxRow = input.ReadUInt64();
            break;
          }
          case 48: {
            MaxWait = input.ReadUInt64();
            break;
          }
          case 197: {
            OpsPerSecond = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            query_.AddEntriesFrom(ref input, _repeated_query_codec);
            break;
          }
          case 26: {
            env_.AddEntriesFrom(ref input, _repeated_env_codec);
            break;
          }
          case 32: {
            MaxRow = input.ReadUInt64();
            break;
          }
          case 48: {
            MaxWait = input.ReadUInt64();
            break;
          }
          case 197: {
            OpsPerSecond = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VQLTypeMap : pb::IMessage<VQLTypeMap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VQLTypeMap> _parser = new pb::MessageParser<VQLTypeMap>(() => new VQLTypeMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VQLTypeMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLTypeMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLTypeMap(VQLTypeMap other) : this() {
      column_ = other.column_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLTypeMap Clone() {
      return new VQLTypeMap(this);
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 1;
    private string column_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Column {
      get { return column_; }
      set {
        column_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VQLTypeMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VQLTypeMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Column != other.Column) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Column.Length != 0) hash ^= Column.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Column.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Column);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Column.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Column);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Column.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Column);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VQLTypeMap other) {
      if (other == null) {
        return;
      }
      if (other.Column.Length != 0) {
        Column = other.Column;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Column = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Column = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VQLResponse : pb::IMessage<VQLResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VQLResponse> _parser = new pb::MessageParser<VQLResponse>(() => new VQLResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VQLResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLResponse(VQLResponse other) : this() {
      response_ = other.response_;
      columns_ = other.columns_.Clone();
      types_ = other.types_.Clone();
      queryId_ = other.queryId_;
      part_ = other.part_;
      query_ = other.query_ != null ? other.query_.Clone() : null;
      timestamp_ = other.timestamp_;
      totalRows_ = other.totalRows_;
      log_ = other.log_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VQLResponse Clone() {
      return new VQLResponse(this);
    }

    /// <summary>Field number for the "Response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private string response_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Response {
      get { return response_; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Columns" field.</summary>
    public const int ColumnsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_columns_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> columns_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Columns {
      get { return columns_; }
    }

    /// <summary>Field number for the "types" field.</summary>
    public const int Types_FieldNumber = 8;
    private static readonly pb::FieldCodec<global::Proto.VQLTypeMap> _repeated_types_codec
        = pb::FieldCodec.ForMessage(66, global::Proto.VQLTypeMap.Parser);
    private readonly pbc::RepeatedField<global::Proto.VQLTypeMap> types_ = new pbc::RepeatedField<global::Proto.VQLTypeMap>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.VQLTypeMap> Types_ {
      get { return types_; }
    }

    /// <summary>Field number for the "query_id" field.</summary>
    public const int QueryIdFieldNumber = 5;
    private ulong queryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong QueryId {
      get { return queryId_; }
      set {
        queryId_ = value;
      }
    }

    /// <summary>Field number for the "part" field.</summary>
    public const int PartFieldNumber = 6;
    private ulong part_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Part {
      get { return part_; }
      set {
        part_ = value;
      }
    }

    /// <summary>Field number for the "Query" field.</summary>
    public const int QueryFieldNumber = 3;
    private global::Proto.VQLRequest query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.VQLRequest Query {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "total_rows" field.</summary>
    public const int TotalRowsFieldNumber = 7;
    private ulong totalRows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TotalRows {
      get { return totalRows_; }
      set {
        totalRows_ = value;
      }
    }

    /// <summary>Field number for the "log" field.</summary>
    public const int LogFieldNumber = 9;
    private string log_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Log {
      get { return log_; }
      set {
        log_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VQLResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VQLResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if(!columns_.Equals(other.columns_)) return false;
      if(!types_.Equals(other.types_)) return false;
      if (QueryId != other.QueryId) return false;
      if (Part != other.Part) return false;
      if (!object.Equals(Query, other.Query)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (TotalRows != other.TotalRows) return false;
      if (Log != other.Log) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Response.Length != 0) hash ^= Response.GetHashCode();
      hash ^= columns_.GetHashCode();
      hash ^= types_.GetHashCode();
      if (QueryId != 0UL) hash ^= QueryId.GetHashCode();
      if (Part != 0UL) hash ^= Part.GetHashCode();
      if (query_ != null) hash ^= Query.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (TotalRows != 0UL) hash ^= TotalRows.GetHashCode();
      if (Log.Length != 0) hash ^= Log.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Response.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Response);
      }
      columns_.WriteTo(output, _repeated_columns_codec);
      if (query_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Query);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Timestamp);
      }
      if (QueryId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(QueryId);
      }
      if (Part != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Part);
      }
      if (TotalRows != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalRows);
      }
      types_.WriteTo(output, _repeated_types_codec);
      if (Log.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Log);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Response.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Response);
      }
      columns_.WriteTo(ref output, _repeated_columns_codec);
      if (query_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Query);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Timestamp);
      }
      if (QueryId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(QueryId);
      }
      if (Part != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Part);
      }
      if (TotalRows != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalRows);
      }
      types_.WriteTo(ref output, _repeated_types_codec);
      if (Log.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Log);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Response.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Response);
      }
      size += columns_.CalculateSize(_repeated_columns_codec);
      size += types_.CalculateSize(_repeated_types_codec);
      if (QueryId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(QueryId);
      }
      if (Part != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Part);
      }
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (TotalRows != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalRows);
      }
      if (Log.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Log);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VQLResponse other) {
      if (other == null) {
        return;
      }
      if (other.Response.Length != 0) {
        Response = other.Response;
      }
      columns_.Add(other.columns_);
      types_.Add(other.types_);
      if (other.QueryId != 0UL) {
        QueryId = other.QueryId;
      }
      if (other.Part != 0UL) {
        Part = other.Part;
      }
      if (other.query_ != null) {
        if (query_ == null) {
          Query = new global::Proto.VQLRequest();
        }
        Query.MergeFrom(other.Query);
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.TotalRows != 0UL) {
        TotalRows = other.TotalRows;
      }
      if (other.Log.Length != 0) {
        Log = other.Log;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Response = input.ReadString();
            break;
          }
          case 18: {
            columns_.AddEntriesFrom(input, _repeated_columns_codec);
            break;
          }
          case 26: {
            if (query_ == null) {
              Query = new global::Proto.VQLRequest();
            }
            input.ReadMessage(Query);
            break;
          }
          case 32: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 40: {
            QueryId = input.ReadUInt64();
            break;
          }
          case 48: {
            Part = input.ReadUInt64();
            break;
          }
          case 56: {
            TotalRows = input.ReadUInt64();
            break;
          }
          case 66: {
            types_.AddEntriesFrom(input, _repeated_types_codec);
            break;
          }
          case 74: {
            Log = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Response = input.ReadString();
            break;
          }
          case 18: {
            columns_.AddEntriesFrom(ref input, _repeated_columns_codec);
            break;
          }
          case 26: {
            if (query_ == null) {
              Query = new global::Proto.VQLRequest();
            }
            input.ReadMessage(Query);
            break;
          }
          case 32: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 40: {
            QueryId = input.ReadUInt64();
            break;
          }
          case 48: {
            Part = input.ReadUInt64();
            break;
          }
          case 56: {
            TotalRows = input.ReadUInt64();
            break;
          }
          case 66: {
            types_.AddEntriesFrom(ref input, _repeated_types_codec);
            break;
          }
          case 74: {
            Log = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VFSFileBuffer : pb::IMessage<VFSFileBuffer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VFSFileBuffer> _parser = new pb::MessageParser<VFSFileBuffer>(() => new VFSFileBuffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VFSFileBuffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VFSFileBuffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VFSFileBuffer(VFSFileBuffer other) : this() {
      clientId_ = other.clientId_;
      vfsPath_ = other.vfsPath_;
      offset_ = other.offset_;
      length_ = other.length_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VFSFileBuffer Clone() {
      return new VFSFileBuffer(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vfs_path" field.</summary>
    public const int VfsPathFieldNumber = 2;
    private string vfsPath_ = "";
    /// <summary>
    /// Path in the filestore for the file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VfsPath {
      get { return vfsPath_; }
      set {
        vfsPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private ulong offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 4;
    private uint length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VFSFileBuffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VFSFileBuffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (VfsPath != other.VfsPath) return false;
      if (Offset != other.Offset) return false;
      if (Length != other.Length) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (VfsPath.Length != 0) hash ^= VfsPath.GetHashCode();
      if (Offset != 0UL) hash ^= Offset.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (VfsPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VfsPath);
      }
      if (Offset != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Offset);
      }
      if (Length != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Length);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (VfsPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VfsPath);
      }
      if (Offset != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Offset);
      }
      if (Length != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Length);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (VfsPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VfsPath);
      }
      if (Offset != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VFSFileBuffer other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.VfsPath.Length != 0) {
        VfsPath = other.VfsPath;
      }
      if (other.Offset != 0UL) {
        Offset = other.Offset;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            VfsPath = input.ReadString();
            break;
          }
          case 24: {
            Offset = input.ReadUInt64();
            break;
          }
          case 32: {
            Length = input.ReadUInt32();
            break;
          }
          case 42: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            VfsPath = input.ReadString();
            break;
          }
          case 24: {
            Offset = input.ReadUInt64();
            break;
          }
          case 32: {
            Length = input.ReadUInt32();
            break;
          }
          case 42: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
